name: CI

on:
  push:
  schedule:
    - cron: "0 0 * * *"

env:
  CI: true
  CACHE_VERSION: 0

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1.1.0
        with:
          version: 12
      - name: Cache api node modules
        uses: actions/cache@v1
        with:
          path: api/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('api/yarn.lock') }}-${{ env.CACHE_VERSION }}
      - name: Cache frontend node modules
        uses: actions/cache@v1
        with:
          path: frontend/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('frontend/yarn.lock') }}-${{ env.CACHE_VERSION }}
      - name: Install dependencies
        run: make dependencies
      - name: Is the api/yarn.lock up-to-date?
        run: git diff --exit-code api/yarn.lock
      - name: Is the frontend/yarn.lock up-to-date?
        run: git diff --exit-code frontend/yarn.lock

  build:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1.1.0
        with:
          version: 12
      - name: Cache api node modules
        uses: actions/cache@v1
        with:
          path: api/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('api/yarn.lock') }}-${{ env.CACHE_VERSION }}
      - name: Cache frontend node modules
        uses: actions/cache@v1
        with:
          path: frontend/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('frontend/yarn.lock') }}-${{ env.CACHE_VERSION }}
      - name: Build TS
        run: make build

  test:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1.1.0
        with:
          version: 12
      - name: Cache api node modules
        uses: actions/cache@v1
        with:
          path: api/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('api/yarn.lock') }}-${{ env.CACHE_VERSION }}
      - name: Cache frontend node modules
        uses: actions/cache@v1
        with:
          path: frontend/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('frontend/yarn.lock') }}-${{ env.CACHE_VERSION }}
      - name: Run tests
        run: make test

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [dependencies, build, test]
    if: github.ref == 'refs/heads/master'
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
      AWS_DEFAULT_REGION: eu-west-1
      ENVIRONMENT: staging
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN}}
      REACT_APP_GRAPHQL_API_ENDPOINT: https://d3ha1p4e7dx2b5.cloudfront.net/graphql
    steps:
      - uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1.1.0
        with:
          version: 12
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: reporadar/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('reporadar/yarn.lock') }}-${{ env.CACHE_VERSION }}
      - name: Cache frontend node modules
        uses: actions/cache@v1
        with:
          path: frontend/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('frontend/yarn.lock') }}-${{ env.CACHE_VERSION }}
      - name: Install SAM
        run: pip install --upgrade pip pyyaml && pip install setuptools awscli aws-sam-cli
      - name: Deploy
        run: PATH="/home/runner/.local/bin:$PATH" make deploy

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [dependencies, build, test, deploy-staging]
    if: github.ref == 'refs/heads/master'
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN}}
      AWS_REGION: eu-west-1
      AWS_DEFAULT_REGION: eu-west-1
      ENVIRONMENT: prod
      REACT_APP_GRAPHQL_API_ENDPOINT: https://d8igm0244py6m.cloudfront.net/graphql
    steps:
      - uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1.1.0
        with:
          version: 12
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: api/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('api/yarn.lock') }}-${{ env.CACHE_VERSION }}
      - name: Cache frontend node modules
        uses: actions/cache@v1
        with:
          path: frontend/node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('frontend/yarn.lock') }}-${{ env.CACHE_VERSION }}
      - name: Install SAM
        run: pip install --upgrade pip pyyaml && pip install setuptools awscli aws-sam-cli
      - name: Deploy
        run: PATH="/home/runner/.local/bin:$PATH" make deploy
